---
layout: post-current
title: Project Nectarist [08] 중간 결과
date: 2023-09-06 16:42:00 +0900
categories: nectarist
---
8월 28일부터 부랴부랴 개발을 시작한 Nectarist..<br>
지금 끝까지 작업하기가 힘들 것 같아 중간 과정을 정리해봤다.<br>
<br>
<div class="post-chapter">1. 프로젝트에서 의미가 있던 부분</div><br>
<ul>
    <li>
        <b>docker를 사용한 개발환경 설정</b><br>
        <br>
        처음 이미지를 만들땐 분리된 개발환경이 생겨서 좋았다.<br>
        이번 기회에 alpine이나 slim이미지는 apt등이 기본적으로 깔리지 않았다는<br>
        귀중한 경험을 했으니 다음번 이미지 선택에 참고할 수 있을것이다.<br>
        <br>
        컨테이너 관리하는 부분은 아주 원활하지는 않았다.<br>
        환경이 바뀔때마다 이미지를 중간중간 저장해줘야 하는게 약간 번거로웠다.<br>
        하지만 배포에 있어서는 확실한 이점이 있었다.<br>
        <br>
        아마 docker에 좀더 익숙해지면 docker commit의 수가 줄어들고<br>
        장점만 활용할수 있을 것으로 기대된다.<br>
        쿠버네티스에 자동으로 컨테이너를 관리해주는 기능이 있다고 하니 같이 사용하면 좋을 것 같다.<br>
    </li>
    <li class="mt-3">
        <b>django는 python과 다르다</b><br>
        <br>
        django의 template에서는 굉장히 제한적으로만 변수를 다룰 수 있다는 걸 (몸으로) 깨달았다.<br>
        대부분의 데이터를 views.py에서만 처리한 다음 template로 보냈다.<br>
    </li>
    <li class="mt-3">
        <b>django와 post, csrf</b><br>
        <br>
        Nectarist의 대부분의 요청은 사용자의 눈에 보이지 않기 때문에 GET으로 처리했지만,<br>
        칵테일계산기에서 계산 후 화면만은 예외라서 POST 형식으로 작업을 했다.<br>
        post 형식으로 요청을 보냈더니 django는 csrf 문제로 post를 받을 수 없다는 얘기가 나왔다.<br>
        (csrf는 사용자가 잘못된 요청을 서버에게 보내도록 하는 공격으로 알고있다.)<br>
        csrf token을 추가하면 된다고 해서 토큰을 추가했다.<br>
        <img src="{{ "/assets/img/nectarist_00008_001.png" }}" style="width: 40rem;"/><br>
        <br>
        그럼에도 403이 돌아오길래 구글링해보니, @csrf_exempt를 적용하면 csrf 보호에서 예외가 된다고 해서<br>
        <img src="{{ "/assets/img/nectarist_00008_002.png" }}" style="width: 40rem;"/><br>
        적용하니 아주 잘 동작했다.
    </li>
    <li class="mt-3">
        <b>django의 ORM</b><br>
        <br>
        PHP를 할땐 SQL만 쓰다가 이번에 ORM을 처음 써봤는데, 데이터를 오브젝트로 바로 꺼낼수 있는 점이 정말 좋았다.<br>
        select_related를 이용하거나, 간단하게 조건을 주는 정도로 경험했다.<br>
        <br>
        <img src="{{ "/assets/img/nectarist_00008_003.png" }}" style="width: 40rem;"/><br>
        위처럼 복잡한 SQL문이 필요한 경우는 다행히 없었다.<br>
        django에서도 직접 sql을 써서 값을 받아오는게 가능하다고 알고 있는데,<br>
        되도록이면 ORM 선에서 마무리할수 있도록 짜는게 좋은게 아닐까 하는 생각이 든다.<br>
    </li>
    <li class="mt-3">
        <b>django의 authentification을 경험하지 못하다</b><br>
        <br>
        다른 프로젝트들을 보면 django에서 지원하는 authentification을 사용하던데,<br>
        나는 관리자를 일반 사용자와 같이 취급/ 일반 사용자중에서 관리자를 뽑기 위해서<br>
        별도로 authentification을 사용하지 않았다.<br>
        <br>
        <img src="{{ "/assets/img/nectarist_00008_004.png" }}" style="width: 40rem;"/><br>
        그냥 session에 넣고<br>
        <img src="{{ "/assets/img/nectarist_00008_005.png" }}" style="width: 40rem;"/><br>
        그냥 session을 풀어버렸다<br>
        <br>
        authentification이 어떤 역할과 기능이 있는지 좀더 공부가 필요하다.
    </li>
    <li class="mt-3">
        <b>급하게 작업하면 코드가 더러워진다</b><br>
        <br>
        급하게 작업하느랴 views.py / css class / html id 등이 전부 중구난방인데,<br>
        명명규칙을 잡아놓고 하지 않으면 복잡해지는 것 같다. 다음번엔 꼭 미리 정해놓고 해야겠다..<br>
    </li>
</ul>
<div class="post-chapter">2. 중간점검 결론</div><br>
지금까지 프로젝트에서 얻은 것은 다음과 같다.<br>
<br>
<ul>
    <li><b>docker</b> : 이미지를 만들고, 커밋하고, docker-compose를 통해 django에 다른 컨테이너를 연결하는 것</li><br>
    <li><b>django</b> : urls.py - views.py - models.py 각 파일의 간단한 활용법, csrf를 벗어나는 방법, 서버에 파일 올리기</li><br>
    <li><b>기타</b> : django MTV와 MVC 패턴의 비교</li><br>
</ul>
<div class="post-chapter">3. 앞으로 추가할 기능</div><br>
<ul>
    <li>
        <b>패스워드 찾기 할때 메일 발송하는 기능</b><br>
        <br>
        linux의 sendmail을 사용하려고 하는데, 단순히 sendmail만 설치한다고 메일을 보낼수 있을지..
        별도로 메일을 전송해주는 서버가 있어야 하는게 아닌지 좀더 공부가 필요하다.
    </li>
    <li class="mt-3">
        <b>반응형 웹으로 모바일 버전 지원하기</b><br>
        <br>
        이거는 원래 염두에 두던 작업이라 bootstrap의 row-col을 이용해 이미 일부 적용해놨다.
        디테일한 부분을 조절하면 될 것 같다.
    </li>
</ul>
<div class="post-chapter">4. 중간 정리를 마치며</div><br>
django에 적응하려고 진행한 프로젝트로, 기본기에는 적응했다는 생각이 든다.<br>
그렇지만 깊게 사용해봤다는 생각이 들지 않는다… <br>
발전을 위해 django의 공식 문서를 좀더 읽어볼 필요가 있을 것 같다.<br>
<br>
docker는 하나의 컨테이너가 하나의 기능을 타겟으로 한다는 느낌을 강하게 받았다.<br>
MSA 구조를 적용한다면 이 docker가 참 필요하겠구나 싶은데,<br>
과연 컨테이너를 어떻게 분리하는게 좋은 구조인지에 대해서 감이 아직 안 잡힌다.<br>
나처럼 django+uwsgi+nginx를 하나의 컨테이너에 밀어넣는것과 각각 하나의 컨테이너를 쓰는 것 사이에 어떤 차이점과 장단점이 있는걸까?